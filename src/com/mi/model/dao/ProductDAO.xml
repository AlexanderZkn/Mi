<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mi.model.dao.ProductDAO">

    <!--<select id="selectAllProductss" resultMap="productMaps">-->
    <!--select-->
    <!--product_id, product_name, product_intro, product_price, product_color, product_version,-->
    <!--product_size, product_sales, product_max, product_url, product_time, sc_id-->
    <!--from-->
    <!--product-->
    <!--</select>-->
    <!--<resultMap id="productMaps" type="Product">-->
    <!--<result column="product_id" property="productId"/>-->
    <!--<result column="product_name" property="productName"/>-->
    <!--<result column="product_intro" property="productIntro"/>-->
    <!--<result column="product_price" property="productPrice"/>-->
    <!--<result column="product_color" property="productColor"/>-->
    <!--<result column="product_version" property="productVersion"/>-->
    <!--<result column="product_size" property="productSize"/>-->
    <!--<result column="product_sales" property="productSales"/>-->
    <!--<result column="product_max" property="productMax"/>-->
    <!--<result column="product_url" property="productUrl"/>-->
    <!--<result column="product_time" property="productTime"/>-->
    <!--<result column="sc_id" property="scId"/>-->
    <!--<collection property="comments" ofType="Comment" select="selectComments" column="product_id"></collection>-->
    <!--</resultMap>-->
    <!--<select id="selectComments" parameterType="int" resultType="Comment">-->
    <!--select-->
    <!--comment_id, content-->
    <!--from-->
    <!--comment-->
    <!--where-->
    <!--product_id=#{product_id}-->
    <!--</select>-->

    <select id="selectAllProducts" parameterType="Map" resultType="Product">
        select
        product_id, product_name, product_intro, product_price, product_color, product_version,
        product_size, product_sales, product_max, product_url, product_time, sc_id
        from
        product
        <where>
            product_status = 1
            <if test="scId != null">
                and sc_id = #{scId}
            </if>
            <if test="productName != null and productName != ''">
                and product_name like CONCAT(CONCAT('%',#{productName},'%'))
            </if>
        </where>
        limit #{index}, #{limit}
    </select>

    <select id="selectAllProductsCount" parameterType="Map" resultType="int">
        select
        count(*)
        from
        product
        <where>
            product_status = 1
            <if test="scId != null">
                and sc_id = #{scId}
            </if>
            <if test="productName != null and productName != ''">
                and product_name like CONCAT(CONCAT('%',#{productName},'%'))
            </if>
        </where>
    </select>

    <update id="deleteProduct" parameterType="int">
        update
          product
        set
          product_status = 0
        where
          product_id = #{productId}
    </update>

    <insert id="addProduct" parameterType="Product">
        insert into
          product(product_id, product_name, product_intro, product_price, product_color,
          product_version, product_size, sc_id, product_time, product_max, product_url,
          product_status)
        value
          (#{productId}, #{productName}, #{productIntro}, #{productPrice}, #{productColor},
          #{productVersion}, #{productSize}, #{scId}, #{productTime}, #{productMax}, #{productUrl}, 1)

    </insert>

    <select id="selectProductById" parameterType="int" resultType="Product">
        select
          *
        from
          product
        where
          product_id = #{productId}
    </select>

    <update id="updateProduct" parameterType="Product">
        update
          product
        set
          sc_id = #{scId},
          product_name = #{productName},
          product_intro = #{productIntro},
          product_price = #{productPrice},
          product_color = #{productColor},
          product_version = #{productVersion},
          product_size = #{productSize},
          product_max = #{productMax},
          product_url = #{productUrl}
        where
          product_id = #{productId}
    </update>

    <select id="selectProductsByName" parameterType="String" resultMap="productMaps">
        select
          *
        from
          product
        where
          product_name = #{productName},
    </select>
    <resultMap id="productMaps" type="Product">
        <result column="product_id" property="productId"/>
        <result column="product_name" property="productName"/>
        <result column="product_intro" property="productIntro"/>
        <result column="product_price" property="productPrice"/>
        <result column="product_color" property="productColor"/>
        <result column="product_version" property="productVersion"/>
        <result column="product_size" property="productSize"/>
        <result column="product_sales" property="productSales"/>
        <result column="product_max" property="productMax"/>
        <result column="product_url" property="productUrl"/>
        <result column="product_time" property="productTime"/>
        <result column="sc_id" property="scId"/>
        <collection property="details" ofType="Detail" select="selectDetails" column="product_id"></collection>
    </resultMap>
    <select id="selectDetails" parameterType="int" resultType="Detail">
        select
          *
        from
          detail
        where product_id = #{product_id}
    </select>

    <select id="selectProductByNCVS" parameterType="Product" resultType="Product">
        select
          *
        from
          product
        where
          product_name = #{productName},
          and product_color = #{productColor},
          and product_version = #{productVersion},
          and product_size = #{productSize}
    </select>

    <select id="selectProductsByNFC" parameterType="Map" resultMap="productNFCMaps">
        select
          p.*, f.*, s.*
        from
          product p, first_classification f, second_classification s
        <where>
            product_status = 1
            and p.sc_id = s.sc_id
            and f.fc_id = s.fc_id
            <if test="fcId != null">
                and f.fc_id = #{fcId}
            </if>
            <if test="scId != null">
                and s.sc_id = #{scId}
            </if>
            <if test="productName != null and productName != ''">
                and p.product_name like CONCAT(CONCAT('%',#{productName},'%'))
            </if>
        </where>
    </select>
    <resultMap id="productNFCMaps" type="Product">
        <result column="product_id" property="productId"/>
        <result column="product_name" property="productName"/>
        <result column="product_intro" property="productIntro"/>
        <result column="product_price" property="productPrice"/>
        <result column="product_color" property="productColor"/>
        <result column="product_version" property="productVersion"/>
        <result column="product_size" property="productSize"/>
        <result column="product_sales" property="productSales"/>
        <result column="product_max" property="productMax"/>
        <result column="product_url" property="productUrl"/>
        <result column="product_time" property="productTime"/>
        <result column="sc_id" property="scId"/>
    </resultMap>

    <update id="updateProductSales" parameterType="Map">
        update
          product
        set
          product_sales = product_sales + #{amount}
        where
          product_id = #{productId}
    </update>

    <select id="getProductsOrderedBySale" parameterType="Map" resultType="Product">
        select
          *
        from
          product
        where
          product_status = 1
        order by product_sales desc
        limit #{index}, #{limit}
    </select>
</mapper>